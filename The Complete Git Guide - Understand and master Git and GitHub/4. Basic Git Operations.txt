SECTION - 4

WHAT IS COMMIT 

- > Commit has the same structure as the blob or a tree.

Each Git commit has the following info inside of it : 
    Author Name
    email 
    commit description
    parent

- > Commits allow us to store different versions of our project in the database.

- > One of the field not listed above is the pointer to the specific tree in the git database.

- > Commit is just "wrapper" for the tree object and contains pointer to specific tree.

- > By moving to different commits (checking out) you are able to "travel" between different "versions" of the project.

- > Your SHA1 hashes for commits will be different from mine because of difference in author name and email.


Configure Git Author name and email

- > git config --global user..name <Name>
- > git config --global user.email <Email>
- > git config --list (To see if the above changes are made or not)

- > If one is using github for hosting repositories, it is recommended to 
    set in your local git config name and email same as used at github account.

- > In such case information about author of commits will be consistent even if you will commit changes directly at github.



Creating first commit 

- > git commit -m "commit description"
- > The first commit in the project is known as the root-commit.

There will be a file which will be made inside the .git foler.

- > git cat-file -p 6fb7
- > This can be used to see the contents of the file.

- > git cat-file -s 6fb7 (215)
- > This can be used to see the size of the file.

- > git cat-file -t 6fb7 (commit)
- > This can be used to see the type of the file.



BASIC GIT COMMANDS

git status 

- > current state of git repository

git add 
- > Add files to the staging area
- > The files must be located in the working directory.
- > 

git commit 
- > Write changes to git repository
- > This command creates new blobs and trees if it is needed.

Other basic git commands that are used for interaction with remote git repositories are :
    git pull
    git push
    git fetch
    git clone


git log 
- > history of changes (commits)

git checkout 
- > checkout commit or branch.

To list the files in the staging area we use : 
    git ls-files -s

There are four tracking statuses for a file in git repository:
    Untracked
    Unmodified
    Modified
    Staged

- > By default, when we create a new file , the status for it will be default.
- > In order to move file from untracked stage to staged stage, we use the git add command.
- > To move the file from staged stage to Unmodified stage, we use the git commit.
- > To move the file from unmodified stage to modified stage, just change that file.
- > Again use git add command , we make the file staged.



UNSTAGING A FILE 

- > git rum --cached file3.txt
    - > It means that the file3.txt file was removed from the staging area.

    git ls-files -s
    - > This will be used to check if the file was removed from the staging area or not.

    git add <spacific file name>
    - > This will make that specific file appear in the staging area.




























